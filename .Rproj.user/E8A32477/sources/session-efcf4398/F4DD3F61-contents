---
title: "Forecasting incidence of dengue cases using Generalized Linear Models"
author:
  name: "Rubens Oliveira da Cunha Júnior"
date: "`r format(Sys.time(), '%d/%m/%Y')`"
output: 
  html_document:
    number_sections: true
bibliography: references.bib
csl: ieee.csl
---
```{r}
source("./R/tsglm.R")
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r load_packages, echo=FALSE, message=FALSE, warning=FALSE}
library(forecast)
library(ggplot2)
library(gridExtra)
library(MASS)
```
```{r datasets, echo=FALSE, message=FALSE}
cases <- structure(c(24L, 72L, 191L, 209L, 79L, 31L, 4L, 6L, 1L, 1L, 0L, 
1L, 8L, 6L, 24L, 58L, 65L, 41L, 9L, 10L, 1L, 0L, 2L, 3L, 0L, 
1L, 1L, 4L, 13L, 8L, 5L, 1L, 3L, 3L, 2L, 2L, 0L, 1L, 3L, 3L, 
5L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 8L, 10L, 14L, 7L, 
12L, 4L, 0L, 2L, 0L), .Tsp = c(2015, 2019.91666666667, 12), class = "ts")
rainfall <- structure(c(125.5, 136.5, 253.5, 201, 227.5, 64.2, 25.5, 0, 0, 
0, 3, 7, 305, 76.5, 229.5, 27.5, 63, 20.5, 0, 0, 5, 0, 0, 56.5, 
233.5, 223.7, 138.5, 90.5, 19, 19, 0, 0, 0, 0, 99.9, 58.2, 159.9, 
316.5, 187, 210.7, 67.4, 6, 0, 0, 0, 0, 57.6, 215.5, 89.5, 109.8, 
195.2, 173.6, 64.6, 66.1, 3, 0, 0, 0, 20, 124), .Tsp = c(2015, 
2019.91666666667, 12), class = "ts")
population <- structure(c(58855L, 58855L, 58855L, 58855L, 58855L, 58855L, 58855L, 
58855L, 58855L, 58855L, 58855L, 58855L, 59343L, 59343L, 59343L, 
59343L, 59343L, 59343L, 59343L, 59343L, 59343L, 59343L, 59343L, 
59343L, 59811L, 59811L, 59811L, 59811L, 59811L, 59811L, 59811L, 
59811L, 59811L, 59811L, 59811L, 59811L, 60155L, 60155L, 60155L, 
60155L, 60155L, 60155L, 60155L, 60155L, 60155L, 60155L, 60155L, 
60155L, 60781L, 60781L, 60781L, 60781L, 60781L, 60781L, 60781L, 
60781L, 60781L, 60781L, 60781L, 60781L), .Tsp = c(2015, 2019.91666666667, 
12), class = "ts")
incidence <- (cases/population)*10^5
dates <- seq(as.Date("2015-01-01"), by = "month", along = cases)
```

# Introdução

A toxicologia estuda os efeitos prejudiciais de substâncias químicas em organismos.
Diversos testes de toxicidade podem ser usados avaliar o impacto dessas substâncias nos organismos @timbrell2001.
Quando se analisa a mortalidade em testes de toxicidade, é comum o cálculo da concentração letal para 50% da população testada, conhecida como CL50.
Em alguns casos, também é importante determinar outras concentrações, a exemplo da CL10 ou CL90.
Uma ferramenta estatísitca comumente usada neste tipo de análise é o modelo de regressão de Probit @pacheco2013.

Neste texto, uma análise de Probit será realizada para calcular concentrações letais em linguagem **R**.
Um conjunto de dados da literatura, disponível com livre acesso na internet, será usado como caso de estudo.
Para esta aplicação, primeiramente serão apresentados conceitos básicos sobre modelos lineares generalizados e o modelo de Probit, além das distribuições de probabilidade importantes para a análise.

# Métodos

## Modelos lineares generalizados

Os modelos lineares generalizados (GLM) são extensões flexíveis dos modelos de regressão linear, que permitem que a variável resposta possua uma distribuição de erro diferente da normal.
Os GLM são formados por um componente aleatório, um componente sistemático e uma função de ligação:

* O componente aleatório é a variável resposta $Y$, com média $\mu$ e uma distribuição de probabilidades da família exponencial.
* O componente sistemático é um preditor linear $\eta=\beta_0 + \beta_1X_{1} + \dots + \beta_kX_{k} + u$, em que $X_1,\dots,X_k$ são variáveis preditores e $\beta_0,\beta_1,\dots,\beta_k$ são parâmetros a serem estimados.
* A função de ligação  $g(\cdot)$ transforma a média da variável resposta no preditor linear, da seguinte maneira: $g(\mu) = \eta$ @lindsey1997.

## Modelo Probit

O modelo de regressão de Probit é um caso especial de GLM, que usa como função de ligação a função de distribuição normal padrão $\Phi(\cdot)$, conforme mostrado a seguir.

$$\mu_i=\Phi(\eta_i)=\Phi(\beta_0 + \beta_1X_{1i} + \dots + \beta_kX_{ki} + u)$$

No modelo Probit, o valor do preditor linear $\eta_i$ é tido como um quantil $z$ da distribuição normal padrão, isto é, $\Phi(z)=P(Z\leq z)$, em que $Z \sim Normal(0,1)$.
A variável resposta é convertida em uma variável contínua que assume valores reais no intervalo $[0,1]$ por meio da função de ligação.
Assim, o modelo Probit pode ser pensado como um modelo linear para a transformação da resposta ou como um modelo de regressão não linear para a resposta @chunrong2003.

## Distribuições de Bernoulli e Binomial

Seja $Y_i$ uma variável binária, cujas realizações podem assumir somente dois valores possíveis (sucesso se $Y_i=1$ ou fracasso se $Y_i=0$), pode-se usar a distribuição de Bernoulli para representá-la.
Então, diz-se que $Y_i\sim Be(p)$ com média $\mu_i=p$, em que $p$ é a probabilidade de sucesso.
Na distribuição de Bernoulli, o experimento é realizado apenas uma vez.
No caso em que o experimento seja realizado mais de uma vez, assumindo que as realizações são independentes entre si, pode-se usar a distribuição Binomial.
Esta distribuição descreve o comportamento dos resultados de um número $n$ de realizações de um experimento com probabilidade de sucesso $p$.
Neste caso, diz-se que $Y_i\sim Bin(n,p)$ com média $\mu_i=np$ @morettin2017.

Os resultados de testes de concentração letal são a relação de organismos mortos por diferentes concentrações de alguma substância tóxica a qual foram expostos.
Pode-se representar esta relação por duas variáveis binárias, que indicam respectivamente a morte e a sobrevivência de cada organismo da amostra.
Por exemplo, para um organismo, tem-se `dead = 1` e `alive = 0` caso haja a morte, e vice-versa.
Em vez de visualizar o resultado individualmente, uma outra opção é considerar o resultado de todos os organismos, somando-se o total obtido em cada variável.
Neste caso, o resultado será dado por duas variáveis que indicam respectivamente o total que sobreviveu ou não.
Por exemplo, em uma amostra formada por 10 organismos, tem-se `dead = 6` e `alive = 4`.
Assim, as variáveis binárias são convertidas em variáveis de uma distribuição Binomial.

## Incidence of dengue cases

# Example

## Dataset

Neste texto, foi usado um conjunto de dados da *Mendeley*, disponíveis em @glaberman2021.
São dados de testes de toxicidade de concentração letal (CL50) realizados com espécies de nematoides em resposta ao cloreto de cobre e cloreto de zinco.
Os arquivos contém dados brutos de toxicidade, cálculos de CL50 e validação de concentração química.
Em particular, neste texto, foram usados os dados de cepas N2 de *C. elegans* submetida a cloreto de zinco.

No **R**, foi usado uma variável para o número de mortes (`dead`) e outra para o número de sobreviventes (`alive`), além da concentração de zinco (`conc`), medida em mg/L.
Em seguida, o conjunto de dados `experiment` foi criado como um `data.frame`.

```{r plot_data, echo=FALSE, message=FALSE}
p1 <- data.frame("Date" = dates, "Value" = cases) %>%
  ggplot(mapping = aes(x = Date, y = Value), labs = "Cases") +
  geom_line() +
  labs(y = "Cases", x = "") +
  geom_point()
p2 <- data.frame("Date" = dates, "Value" = rainfall) %>%
  ggplot(mapping = aes(x = Date, y = Value)) +
  geom_line() +
  labs(y = "Rainfall (mm)", x = "") +
  geom_point()
p3 <- data.frame("Date" = dates, "Value" = population) %>%
  ggplot(mapping = aes(x = Date, y = Value)) +
  geom_line() +
  labs(y = "Population", x = "Time") +
  geom_point()

grid.arrange(p1, p2, p3, nrow = 3)
```

## Training and test set

```{r}
n_tot <- length(cases)
n_train <- 48
n_test <- 12

y_train <- head(cases, n_train)
y_test <- tail(incidence, n_test)

xreg_lag <- lag_matrix(y = rainfall, lags = 1, label =  "xreg")
xreg_lag <- head(xreg_lag, n_tot)
xreg_train <- head(xreg_lag, n_train)
xreg_test <- tail(xreg_lag, n_test)

pop_train <- head(population, n_train)
```

## Modelling

O modelo Probit foi construído usando a função `glm` do próprio **R**.
Nesta função, o argumento `family` especifica a distribuição de probabilidades `binomial` com função de ligação (*link function*) `probit`.

```{r model}
mmod <- tsglm(
  y = y_train,
  lags = 1,
  xreg = xreg_train,
  offset = log(pop_train)
)
```

Neste texto, foi usada a formulação de Wilkinson-Rogers [@wilkinsonRogers1973] para construção do GLM, que usa a notação `cbind(dead, alive)` para definir as entradas do modelo.
Em **R**, existem outras alternativas para a definição das entradas da função `glm`.

Construído o modelo, pode-se verificar uma breve descrição usando a função `summary`.

```{r summary}
summary(mod)
```

Os coeficientes do modelo podem ser obtidos da seguinte maneira:

```{r coefficients}
b0 <- mod$coefficients[1] # Intercept (b0)
b1 <- mod$coefficients[2] # Slope (b1)
```

## Forecasting

Para o cálculo da concentração letal, deve-se definir qual a porcentagem `p` que se deseja calcular.
Por exemplo, para a CL50, tem-se `p = 50`.
Em seguida, calcula-se o quantil da distribuição normal referente ao valor `p` usando a função `qnorm`.
Por fim, o valor da concentração letal é calculado usando os coeficiente do modelo.

```{r lethal concentration}
newxreg <- cbind(xreg_test, rep(log(10^5), n_test))
fct_test <- predict.tsglm(object = mmod, h = n_test, xreg = newxreg)
```

```{r}
data.frame(
  "Date" = rep(seq(as.Date("2019-01-01"), by = "month", along = y_test), 2),
  "Series" = c(rep("Observed", length(y_test)), rep("Forecast", length(fct_test))),
  "Incidence" = c(y_test, fct_test)
) %>%
  ggplot(
    mapping = aes(x = Date, y = Incidence, group = Series, col = Series)
  ) +
  geom_line() +
  labs(
    y = "Incidence (cases/100.000 hab.)",
    x = "Month",
    title = "Dengue incidence in Crato, Brazil, 2019",
    subtitle = "Forecasts from a Generalized linear model with Negative Binomial distribution and rainfall impact") +
  geom_point()
```

## Accuracy

```{r}
accuracy(y_test, fct_test)
```


Os autores do conjunto de dados usado neste texto @glaberman2021 optaram por um modelo log-logit para calcular a CL50 usando a função `glm` do pacote `MASS`.
O resultado obtido por eles neste caso foi igual a 124,24 mg/L.
Comparando as duas abordagens, os valores calculados foram próximos e a diferença observada pode ser devida ao modelo diferente usado pelos autores. 

# Considerações finais

Este texto demostrou a aplicação de análise de Probit em linguagem **R** para o cálculo de concentrações letais em testes de toxicidade.
Um conjunto de dados da literatura foi usado como caso de estudo e a análise de Probit foi usada com sucesso para estimar a concentração letal CL50 de zinco em uma cepa de uma espécie de nematoides.
A diferença entre os resultados obtidos pelos autores do conjunto de dados pode ser devida ao modelo diferente usado por eles.

# Referências

<div id="refs"></div>